/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define CMK 0
#define NUM 1
#define SBL 2
#define SYS 3

#define COMBO_TIME_OUT 25

/ {

behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings =
                <&mt LCTRL ESC>,
                <&kp TAB>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <180>;
            tapping-term-ms = <200>;
            global-quick-tap;
        };
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            global-quick-tap;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_left_ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <27 28>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_left_alt {
            bindings = <&kp LALT>;
            key-positions = <26 28>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_left_gui {
            bindings = <&kp LGUI>;
            key-positions = <26 27>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_right_ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <31 32>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_right_alt {
            bindings = <&kp LALT>;
            key-positions = <31 33>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_right_gui {
            bindings = <&kp LGUI>;
            key-positions = <32 33>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_left_quote {
            bindings = <&kp SQT>;
            key-positions = <15 16>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_left_tilde {
            bindings = <&kp TILDE>;
            key-positions = <14 15>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_left_circumflex {
            bindings = <&kp CARET>;
            key-positions = <14 16>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_right_quote {
            bindings = <&kp SQT>;
            key-positions = <19 20>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_right_tilde {
            bindings = <&kp TILDE>;
            key-positions = <20 21>;
            timeout-ms = <COMBO_TIME_OUT>;
        };

        combo_right_circumflex {
            bindings = <&kp CARET>;
            key-positions = <19 21>;
            timeout-ms = <COMBO_TIME_OUT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp ESC   &kp Q        &kp W         &kp F         &kp P          &kp B                            &kp J             &kp L         &kp U        &kp Y        &kp SEMI &kp BSPC
&kp TAB   &kp A        &kp R         &kp S         &kp T          &kp G                            &kp M             &kp N         &kp E        &kp I           &kp O &kp SQT
&kp LSHFT &kp Z        &kp X         &kp C         &kp D          &kp V      &kp C_MUTE &none      &kp K             &kp H     &kp COMMA      &kp DOT        &kp FSLH &kp RSHFT
                  &trans &lt SYS ESC &kp LSHIFT  &lt SBL SPACE &trans    &trans  &lt NUM ENTER          &kp BSPC       &kp TAB &trans  
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        number {
            display-name = "number";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8    &kp F9    &kp F10   &kp F11
&kp GRAVE &kp EXCL     &kp AT_SIGN     &kp HASH      &kp DLLR       &kp PRCNT                 &kp CARET         &kp AMPS      &kp STAR       &kp LPAR  &kp F12
&trans      &kp N1          &kp N2       &kp N3        &kp N4          &kp N5                    &kp N6           &kp N7        &kp N8         &kp N9  &kp PIPE
&trans      &trans          &trans       &trans        &trans          &trans  &trans &trans     &trans         &kp LEFT      &kp DOWN         &kp UP  &trans
                    &trans    &trans      &trans    &mo SYS &trans      &trans  &trans    &trans   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        symbol {
            display-name = "symbol";
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                  &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp LC(Q)      &kp LC(W)       &kp LC(F)       &kp LC(P)        &kp LC(B)                           &kp DQT         &kp LBRC         &kp RBRC       &kp BSLH       &kp PIPE &trans
&trans     &kp LC(A)      &kp LC(R)       &kp LC(S)       &kp LC(T)        &kp LC(G)                         &kp TILDE         &kp LBKT         &kp RBKT       &kp GRAVE       &kp SQT &kp BSPC
&trans     &kp LC(Z)      &kp LC(X)       &kp LC(C)       &kp LC(D)        &kp LC(V)       &trans  &trans       &trans        &kp MINUS        &kp UNDER       &kp EQUAL      &kp PLUS &trans
                        &trans       &trans       &trans       &trans        &trans  &trans   &mo SYS     &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "adjust";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &none &none &none &none &none &none
&ext_power EP_TOG &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &none &none &none &none &none &none
&none                   &trans        &trans        &trans    &bt BT_CLR  &out OUT_TOG                         &none &none &none &none &none &none
&none                   &trans        &trans        &trans  &out OUT_USB  &out OUT_BLE  &rgb_ug RGB_TOG &none  &none &none &none &none &none &none
                                  &none           &none           &none           &none            &none           &none  &none &none &none &none
            >;
        };

    };
};
